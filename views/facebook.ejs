<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <style type="text/css">
        .pushme {
            position: relative;
            font-weight: 700;
            background-color: #384D9D;
            border-radius: 0.6em;
            display: inline-block;
            margin: 1em;
        }

        .pushme .inner {
            display: inline-block;
            background-color: #F6F3EB;
            border-radius: 0.6em;
            border: 0.3em solid #384D9D;
            padding: 1em;
            cursor: pointer;
            text-transform: uppercase;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            -webkit-transform: translate3d(0.6em, -0.6em, 0);
            transform: translate3d(0.6em, -0.6em, 0);
            -webkit-transition: -webkit-transform 240ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
            transition: -webkit-transform 240ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
            transition: transform 240ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
            transition: transform 240ms cubic-bezier(0.175, 0.885, 0.32, 1.275), -webkit-transform 240ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
            -webkit-transition-delay: 220ms;
            transition-delay: 220ms;
        }

        .pushme:active .inner,
        .pushme.click .inner {
            -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
            -webkit-transition: -webkit-transform 120ms cubic-bezier(0.23, 1, 0.32, 1);
            transition: -webkit-transform 120ms cubic-bezier(0.23, 1, 0.32, 1);
            transition: transform 120ms cubic-bezier(0.23, 1, 0.32, 1);
            transition: transform 120ms cubic-bezier(0.23, 1, 0.32, 1), -webkit-transform 120ms cubic-bezier(0.23, 1, 0.32, 1);
        }

        body {
            background: #F6F3EB;
            font-family: "Open Sans", sans-serif;
            color: #384D9D;
            font-size: 5vh;
        }

        .center {
            position: absolute;
            top: 8%;
            left: 50%;
            width: 80vw;
            text-align: center;
            -webkit-transform: translate3d(-50%, -50%, 0);
            transform: translate3d(-50%, -50%, 0);
        }

        .sig {
            position: fixed;
            bottom: 5px;
            right: 5px;
            text-decoration: none;
            font-size: 12px;
            font-weight: 800;
            font-family: sans-serif;
            color: rgba(0, 0, 0, 0.4);
        }

        @import url("https://fonts.googleapis.com/css?family=Lora:700");
        @import url("https://fonts.googleapis.com/css?family=Open+Sans");
         :root {
            --z-distance: 8.519vw;
            --from-left: 1;
            --mobile-bkp: 650px;
        }

        *,
        *::before,
        *::after {
            box-sizing: border-box;
        }

        body {
            min-height: 100vh;
            margin: 0;
            padding: 0;
            overflow: hidden;
            font-family: Lora, serif;
            font-size: calc(14px + .3vw);
        }

        .slider {
            width: 100vw;
            height: 100vh;
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            -webkit-perspective: 1000px;
            perspective: 1000px;
            -webkit-transform-style: preserve-3d;
            transform-style: preserve-3d;
        }

        .slider::before,
        .slider::after {
            content: '';
            left: -1vw;
            top: -1vh;
            display: block;
            position: absolute;
            width: 102vw;
            height: 102vh;
            background-position: center;
            background-size: cover;
            will-change: opacity;
            z-index: -1;
            box-shadow: 0 0 0 50vmax rgba(0, 0, 0, 0.7) inset;
        }

        .slider::before {
            background-image: var(--img-prev);
        }

        .slider::after {
            -webkit-transition: opacity 0.7s;
            transition: opacity 0.7s;
            opacity: 0;
            background-image: var(--img-next);
        }

        .slider--bg-next::after {
            opacity: 1;
        }

        .slider__content {
            margin: auto;
            width: 65vw;
            height: 32.5vw;
            max-height: 60vh;
            will-change: transform;
            -webkit-transform-style: preserve-3d;
            transform-style: preserve-3d;
            pointer-events: none;
            -webkit-transform: translateZ(var(--z-distance));
            transform: translateZ(var(--z-distance));
        }

        .slider__images {
            overflow: hidden;
            position: absolute;
            width: 100%;
            height: 100%;
            z-index: 0;
            box-shadow: 0 0 5em #000;
        }

        .slider__images-item {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            will-change: transform;
            -webkit-transition-timing-function: ease-in;
            transition-timing-function: ease-in;
            visibility: hidden;
        }

        .slider__images-item img {
            display: block;
            position: relative;
            left: -1em;
            top: -1em;
            width: calc(100% + 1em * 2);
            height: calc(100% + 1em * 2);
            -o-object-fit: cover;
            object-fit: cover;
            will-change: transform;
        }

        .slider__images-item--active {
            z-index: 20;
            visibility: visible;
        }

        .slider__images-item--subactive {
            z-index: 15;
            visibility: visible;
        }

        .slider__images-item--next {
            -webkit-transform: translateX(100%);
            transform: translateX(100%);
        }

        .slider__images-item--prev {
            -webkit-transform: translateX(-100%);
            transform: translateX(-100%);
        }

        .slider__images-item--transit {
            -webkit-transition: opacity 0.7s, -webkit-transform 0.7s;
            transition: opacity 0.7s, -webkit-transform 0.7s;
            transition: transform 0.7s, opacity 0.7s;
            transition: transform 0.7s, opacity 0.7s, -webkit-transform 0.7s;
        }

        .slider__text {
            position: relative;
            height: 100%;
        }

        .slider__text-item {
            position: absolute;
            width: 100%;
            height: 100%;
            padding: 0.5em;
            -webkit-perspective: 1000px;
            perspective: 1000px;
            -webkit-transform-style: preserve-3d;
            transform-style: preserve-3d;
        }

        .slider__text-item>* {
            overflow: hidden;
            position: absolute;
        }

        .slider__text-item h3,
        .slider__text-item p {
            -webkit-transition: -webkit-transform 0.35s ease-out;
            transition: -webkit-transform 0.35s ease-out;
            transition: transform 0.35s ease-out;
            transition: transform 0.35s ease-out, -webkit-transform 0.35s ease-out;
            line-height: 1.5;
            overflow: hidden;
        }

        .slider__text-item h3 {
            background-color: rgba(255, 255, 255, 0.5);
        }

        .slider__text-item p {
            font-family: 'Open Sans', sans-serif;
            padding: 1em;
            color: white;
            text-align: center;
            background-color: rgba(0, 0, 0, 0.5);
        }

        .slider__text-item h3::before,
        .slider__text-item p::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            -webkit-transform: translateX(0);
            transform: translateX(0);
            -webkit-transition: -webkit-transform 0.35s ease-out 0.28s;
            transition: -webkit-transform 0.35s ease-out 0.28s;
            transition: transform 0.35s ease-out 0.28s;
            transition: transform 0.35s ease-out 0.28s, -webkit-transform 0.35s ease-out 0.28s;
        }

        .slider__text-item h3::before {
            background-color: #000;
        }

        .slider__text-item p::before {
            background-color: #fff;
        }

        .slider__text-item h3 {
            margin: 0;
            font-size: 3.5em;
            padding: 0 .3em;
            position: relative;
            font-weight: 700;
            -webkit-transform: translateX(-100%);
            transform: translateX(-100%);
        }

        .slider__text-item p {
            margin: 0;
            -webkit-transform: translateX(100%);
            transform: translateX(100%);
        }

        .slider__text-item-head {
            top: -0.5em;
            -webkit-transform: translateZ(3em);
            transform: translateZ(3em);
            -webkit-clip-path: polygon(0 0, 0.5em 100%, 100% 100%, calc(100% - .3em) 0.3em);
            clip-path: polygon(0 0, 0.5em 100%, 100% 100%, calc(100% - .3em) 0.3em);
        }

        .slider__text-item-info {
            bottom: 0;
            right: 0;
            max-width: 75%;
            min-width: -webkit-min-content;
            min-width: -moz-min-content;
            min-width: min-content;
            -webkit-transform: translateZ(2em);
            transform: translateZ(2em);
            -webkit-clip-path: polygon(0.5em 0, 100% 0%, calc(100% - .5em) 100%, 0 calc(100% - .5em));
            clip-path: polygon(0.5em 0, 100% 0%, calc(100% - .5em) 100%, 0 calc(100% - .5em));
        }

        .slider__text-item--active h3,
        .slider__text-item--active p {
            -webkit-transform: translateX(0);
            transform: translateX(0);
        }

        .slider__text-item--active h3::before {
            -webkit-transform: translateX(100%);
            transform: translateX(100%);
        }

        .slider__text-item--active p::before {
            -webkit-transform: translateX(-100%);
            transform: translateX(-100%);
        }

        .slider__text-item--backwards h3::before,
        .slider__text-item--backwards p::before {
            -webkit-transition: -webkit-transform 0.35s ease-in;
            transition: -webkit-transform 0.35s ease-in;
            transition: transform 0.35s ease-in;
            transition: transform 0.35s ease-in, -webkit-transform 0.35s ease-in;
        }

        .slider__text-item--backwards h3,
        .slider__text-item--backwards p {
            -webkit-transition: -webkit-transform 0.35s ease-in 0.35s;
            transition: -webkit-transform 0.35s ease-in 0.35s;
            transition: transform 0.35s ease-in 0.35s;
            transition: transform 0.35s ease-in 0.35s, -webkit-transform 0.35s ease-in 0.35s;
        }

        .slider__nav {
            position: absolute;
            left: 0;
            top: 50;
            width: 100%;
            height: 100%;
            text-align: center;
        }

        .slider__nav-arrows {
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            -webkit-box-pack: justify;
            -ms-flex-pack: justify;
            justify-content: space-between;
            width: 100%;
            position: absolute;
            top: 0;
            left: 0;
        }

        .slider__nav-arrow {
            height: 100vh;
            width: 50vw;
            text-indent: -9999px;
            white-space: nowrap;
        }

        .slider__nav-arrow--left {
            --arrow: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='80' height='80' viewBox='0 0 4 4'%3E %3Cpolyline points='3 1 1 2 3 3' stroke='white' stroke-width='.3' stroke-opacity='.5' fill='none'%3E%3C/polyline%3E %3C/svg%3E");
            cursor: var(--arrow) 40 40, auto;
        }

        .slider__nav-arrow--right {
            --arrow: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='80' height='80' viewBox='0 0 4 4'%3E %3Cpolyline points='1 1 3 2 1 3' stroke='white' stroke-width='.3' stroke-opacity='.5' fill='none'%3E%3C/polyline%3E %3C/svg%3E");
            cursor: var(--arrow) 40 40, auto;
        }

        .slider__nav-dots {
            margin-top: 88vh;
            display: -webkit-inline-box;
            display: -ms-inline-flexbox;
            display: inline-flex;
            position: relative;
            padding: 1em;
            pointer-events: none;
        }

        .slider__nav-dots::before {
            content: '';
            position: absolute;
            left: calc(1em + 1em + 2px);
            top: calc(1em + 2px);
            width: calc(1em - 2px * 2);
            height: calc(1em / 2 - 2px * 2);
            background-color: rgba(255, 255, 255, 0.9);
            -webkit-transition: -webkit-transform 0.7s ease-out;
            transition: -webkit-transform 0.7s ease-out;
            transition: transform 0.7s ease-out;
            transition: transform 0.7s ease-out, -webkit-transform 0.7s ease-out;
            -webkit-transform: translateX(calc((1em + 1em * 2) * (var(--from-left) - 1)));
            transform: translateX(calc((1em + 1em * 2) * (var(--from-left) - 1)));
        }

        .slider__nav-dot {
            margin: 0 1em;
            width: 1em;
            height: 0.5em;
            border: 2px solid rgba(255, 255, 255, 0.5);
            /* 
            The cursor is not the default one because of a weird bug 
            related to custom cursors above
          */
            cursor: crosshair;
            pointer-events: all;
            display: inline-block;
        }

        .slider__nav-dot:hover {
            border-color: rgba(255, 255, 255, 0.7);
        }

        .slider__nav-dot:active {
            border-color: rgba(255, 255, 255, 0.5);
        }

        @media only screen and (max-width: 650px) {
            .slider::before,
            .slider::after {
                display: none;
            }

            .slider__content {
                width: 100vw;
                height: 100vh;
                max-height: 100vh;
            }

            .slider__text-item-info {
                bottom: 50%;
                left: 50%;
                -webkit-transform: translate(-50%, 50%);
                transform: translate(-50%, 50%);
            }
            .slider__text-item-info p {
                padding: 1em .8em;
            }

            .slider__text-item-head {
                top: 5vh;
                left: 10vw;
                -webkit-transform: translateZ(0);
                transform: translateZ(0);
            }
            .slider__text-item-head h3 {
                font-size: 2.5em;
            }

            .slider__nav-dots {
                background-color: rgba(0, 0, 0, 0.3);
            }

            .slider__nav-arrow {
                width: 10vw;
                position: relative;
                cursor: auto;
            }
            .slider__nav-arrow:active {
                -webkit-filter: brightness(0.5);
                filter: brightness(0.5);
            }
            .slider__nav-arrow::before {
                content: '';
                background-image: var(--arrow);
                background-size: cover;
                width: 8vw;
                height: 8vw;
                position: absolute;
                top: 50%;
                left: 50%;
                -webkit-transform: translate(-50%, -50%);
                transform: translate(-50%, -50%);
            }
            .slider__nav-arrow--left {
                background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.7) 0, transparent 100%);
                background-image: linear-gradient(to right, rgba(0, 0, 0, 0.7) 0, transparent 100%);
            }
            .slider__nav-arrow--left:active {
                background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.9) 0, transparent 100%);
                background-image: linear-gradient(to right, rgba(0, 0, 0, 0.9) 0, transparent 100%);
            }
            .slider__nav-arrow--right {
                background-image: -webkit-linear-gradient(right, rgba(0, 0, 0, 0.7) 0, transparent 100%);
                background-image: linear-gradient(to left, rgba(0, 0, 0, 0.7) 0, transparent 100%);
            }
            .slider__nav-arrow--right:active {
                background-image: -webkit-linear-gradient(right, rgba(0, 0, 0, 0.9) 0, transparent 100%);
                background-image: linear-gradient(to left, rgba(0, 0, 0, 0.9) 0, transparent 100%);
            }
        }
    </style>
</head>

<body>

    <div class="slider" id="slider" style="--img-prev:url(https://lh3.googleusercontent.com/aC9nyW5dhaYFmWD8fcf8DApjpH08eHEkbCHqmUPHRQ5T3jK-QyNKZYVMehmrvyPdEA_KxWvgZ3_kyOOYOAv99Ow3UoKSvEloleVKGSfLOwOyDV3Q6Dwi1G-NYoa9-t_ofmmskE6BYnVIOnIz2HWlMcijzIEwvKAL_R4z63DaLgG0z_OcGiSQHunwGAPXrBQUv42ZXuIMODq4zxDHczSxJ72b0-_udtdQK3JuT2X8nXCwFoF7GxmOpzXS0H5f50DuCbXoXcx-O7bgBMCXZdMpTxB27-wdXeLmxpYUySXgjSN2NAKmK16DmGLYvw5tMlrqwb8h4MJEEbXjP1pjPxXsahb7UZseEGyn80uLjATANJvusyJWCtzkkxYXPz-yI1rDvfEJKe2eyA-5AvFlzFBSwBMASn8f7mXinUrXMMREkJQjoi89NfZ91G7253OEVQOqcWxddiYtcHCO5v6Pl3QfV2SUTWXgggscDSY2ezjSPpYERNTXnIM_aCyWmIG7ybrfqOB0eVYBAgynyuPVbjd4KuZWZq2Dfu33HX1RuPKglbOuZGD1QbpJnruvUVkAmjDXI40ENN7X=w1600-h766)">
        <div class="slider__content" id="slider-content">
            <div class="slider__images">
                <div class="slider__images-item slider__images-item--active" data-id="1"><img src="nhi1.jpg" /></div>
                <div class="slider__images-item" data-id="2"><img src="nhi2.jpg" /></div>
                <div class="slider__images-item" data-id="3"><img src="nhi3.jpg" /></div>
                <div class="slider__images-item" data-id="4"><img src="nhi4.jpg" /></div>
                <div class="slider__images-item" data-id="5"><img src="nhi5.jpg" /></div>
            </div>
            <div class="slider__text">
                <div class="slider__text-item slider__text-item--active" data-id="1">
                    <div class="slider__text-item-head">
                        <h3>Name</h3>
                    </div>
                    <div class="slider__text-item-info">
                        <p>Terasa Yen Nhi</p>
                    </div>
                </div>
                <div class="slider__text-item" data-id="2">
                    <div class="slider__text-item-head">
                        <h3>Old</h3>
                    </div>
                    <div class="slider__text-item-info">
                        <p>11 years old</p>
                    </div>
                </div>
                <div class="slider__text-item" data-id="3">
                    <div class="slider__text-item-head">
                        <h3>Con</h3>
                    </div>
                    <div class="slider__text-item-info">
                        <p>Điên</p>
                    </div>
                </div>
                <div class="slider__text-item" data-id="4">
                    <div class="slider__text-item-head">
                        <h3>Con</h3>
                    </div>
                    <div class="slider__text-item-info">
                        <p>Hâm</p>
                    </div>
                </div>
                <div class="slider__text-item" data-id="5">
                    <div class="slider__text-item-head">
                        <h3>FAVORITE QUOTES</h3>
                    </div>
                    <div class="slider__text-item-info">
                        <p>Let's share to be shared</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="slider__nav">
            <div class="slider__nav-arrows">
                <div class="slider__nav-arrow slider__nav-arrow--left" id="left">to left</div>
                <div class="slider__nav-arrow slider__nav-arrow--right" id="right">to right</div>
            </div>
            <div class="slider__nav-dots" id="slider-dots">
                <div class="slider__nav-dot slider__nav-dot--active" data-id="1"></div>
                <div class="slider__nav-dot" data-id="2"></div>
                <div class="slider__nav-dot" data-id="3"></div>
                <div class="slider__nav-dot" data-id="4"></div>
                <div class="slider__nav-dot" data-id="5"></div>
            </div>
        </div>
    </div>


    <div class="center"><a class="pushme" href="https://www.facebook.com"> <span class="inner">Chào bạn Terasa Yến Nhi</span></a>
    </div><a class="sig" href="http://nathan.tokyo" target="_blank">NATHAN.TOKYO</a>
    <script>
        /*
  More about this function - 
  https://codepen.io/rachsmith/post/animation-tip-lerp
*/
        function lerp({ x, y }, { x: targetX, y: targetY }) {
            const fraction = 0.2;

            x += (targetX - x) * fraction;
            y += (targetY - y) * fraction;

            return { x, y };
        }

        class Slider {
            constructor(el) {
                const imgClass = this.IMG_CLASS = 'slider__images-item';
                const textClass = this.TEXT_CLASS = 'slider__text-item';
                const activeImgClass = this.ACTIVE_IMG_CLASS = `${imgClass}--active`;
                const activeTextClass = this.ACTIVE_TEXT_CLASS = `${textClass}--active`;

                this.el = el;
                this.contentEl = document.getElementById('slider-content');
                this.onMouseMove = this.onMouseMove.bind(this);

                // taking advantage of the live nature of 'getElement...' methods
                this.activeImg = el.getElementsByClassName(activeImgClass);
                this.activeText = el.getElementsByClassName(activeTextClass);
                this.images = el.getElementsByTagName('img');

                document.getElementById('slider-dots')
                    .addEventListener('click', this.onDotClick.bind(this));

                document.getElementById('left')
                    .addEventListener('click', this.prev.bind(this));

                document.getElementById('right')
                    .addEventListener('click', this.next.bind(this));

                window.addEventListener('resize', this.onResize.bind(this));

                this.onResize();

                this.length = this.images.length;
                this.lastX = this.lastY = this.targetX = this.targetY = 0;
            }
            onResize() {
                const htmlStyles = getComputedStyle(document.documentElement);
                const mobileBreakpoint = htmlStyles.getPropertyValue('--mobile-bkp');

                const isMobile = this.isMobile = matchMedia(
                    `only screen and (max-width: ${mobileBreakpoint})`
                ).matches;

                this.halfWidth = innerWidth / 2;
                this.halfHeight = innerHeight / 2;
                this.zDistance = htmlStyles.getPropertyValue('--z-distance');

                if (!isMobile && !this.mouseWatched) {
                    this.mouseWatched = true;
                    this.el.addEventListener('mousemove', this.onMouseMove);
                    this.el.style.setProperty(
                        '--img-prev',
                        `url(${this.images[+this.activeImg[0].dataset.id - 1].src})`
                    );
                    this.contentEl.style.setProperty('transform', `translateZ(${this.zDistance})`);
                } else if (isMobile && this.mouseWatched) {
                    this.mouseWatched = false;
                    this.el.removeEventListener('mousemove', this.onMouseMove);
                    this.contentEl.style.setProperty('transform', 'none');
                }
            }
            getMouseCoefficients({ pageX, pageY } = {}) {
                const halfWidth = this.halfWidth;
                const halfHeight = this.halfHeight;
                const xCoeff = ((pageX || this.targetX) - halfWidth) / halfWidth;
                const yCoeff = (halfHeight - (pageY || this.targetY)) / halfHeight;

                return { xCoeff, yCoeff }
            }
            onMouseMove({ pageX, pageY }) {
                this.targetX = pageX;
                this.targetY = pageY;

                if (!this.animationRunning) {
                    this.animationRunning = true;
                    this.runAnimation();
                }
            }
            runAnimation() {
                if (this.animationStopped) {
                    this.animationRunning = false;
                    return;
                }

                const maxX = 10;
                const maxY = 10;

                const newPos = lerp({
                    x: this.lastX,
                    y: this.lastY
                }, {
                        x: this.targetX,
                        y: this.targetY
                    });

                const { xCoeff, yCoeff } = this.getMouseCoefficients({
                    pageX: newPos.x,
                    pageY: newPos.y
                });

                this.lastX = newPos.x;
                this.lastY = newPos.y;

                this.positionImage({ xCoeff, yCoeff });

                this.contentEl.style.setProperty('transform', `
      translateZ(${this.zDistance})
      rotateX(${maxY * yCoeff}deg)
      rotateY(${maxX * xCoeff}deg)
    `);

                if (this.reachedFinalPoint) {
                    this.animationRunning = false;
                } else {
                    requestAnimationFrame(this.runAnimation.bind(this));
                }
            }
            get reachedFinalPoint() {
                const lastX = ~~this.lastX;
                const lastY = ~~this.lastY;
                const targetX = this.targetX;
                const targetY = this.targetY;

                return (lastX == targetX || lastX - 1 == targetX || lastX + 1 == targetX)
                    && (lastY == targetY || lastY - 1 == targetY || lastY + 1 == targetY);
            }
            positionImage({ xCoeff, yCoeff }) {
                const maxImgOffset = 1;
                const currentImage = this.activeImg[0].children[0];

                currentImage.style.setProperty('transform', `
      translateX(${maxImgOffset * -xCoeff}em)
      translateY(${maxImgOffset * yCoeff}em)
    `);
            }
            onDotClick({ target }) {
                if (this.inTransit) return;

                const dot = target.closest('.slider__nav-dot');

                if (!dot) return;

                const nextId = dot.dataset.id;
                const currentId = this.activeImg[0].dataset.id;

                if (currentId == nextId) return;

                this.startTransition(nextId);
            }
            transitionItem(nextId) {
                function onImageTransitionEnd(e) {
                    e.stopPropagation();

                    nextImg.classList.remove(transitClass);

                    self.inTransit = false;

                    this.className = imgClass;
                    this.removeEventListener('transitionend', onImageTransitionEnd);
                }

                const self = this;
                const el = this.el;
                const currentImg = this.activeImg[0];
                const currentId = currentImg.dataset.id;
                const imgClass = this.IMG_CLASS;
                const textClass = this.TEXT_CLASS;
                const activeImgClass = this.ACTIVE_IMG_CLASS;
                const activeTextClass = this.ACTIVE_TEXT_CLASS;
                const subActiveClass = `${imgClass}--subactive`;
                const transitClass = `${imgClass}--transit`;
                const nextImg = el.querySelector(`.${imgClass}[data-id='${nextId}']`);
                const nextText = el.querySelector(`.${textClass}[data-id='${nextId}']`);

                let outClass = '';
                let inClass = '';

                this.animationStopped = true;

                nextText.classList.add(activeTextClass);

                el.style.setProperty('--from-left', nextId);

                currentImg.classList.remove(activeImgClass);
                currentImg.classList.add(subActiveClass);

                if (currentId < nextId) {
                    outClass = `${imgClass}--next`;
                    inClass = `${imgClass}--prev`;
                } else {
                    outClass = `${imgClass}--prev`;
                    inClass = `${imgClass}--next`;
                }

                nextImg.classList.add(outClass);

                requestAnimationFrame(() => {
                    nextImg.classList.add(transitClass, activeImgClass);
                    nextImg.classList.remove(outClass);

                    this.animationStopped = false;
                    this.positionImage(this.getMouseCoefficients());

                    currentImg.classList.add(transitClass, inClass);
                    currentImg.addEventListener('transitionend', onImageTransitionEnd);
                });

                if (!this.isMobile)
                    this.switchBackgroundImage(nextId);
            }
            startTransition(nextId) {
                function onTextTransitionEnd(e) {
                    if (!e.pseudoElement) {
                        e.stopPropagation();

                        requestAnimationFrame(() => {
                            self.transitionItem(nextId);
                        });

                        this.removeEventListener('transitionend', onTextTransitionEnd);
                    }
                }

                if (this.inTransit) return;

                const activeText = this.activeText[0];
                const backwardsClass = `${this.TEXT_CLASS}--backwards`;
                const self = this;

                this.inTransit = true;

                activeText.classList.add(backwardsClass);
                activeText.classList.remove(this.ACTIVE_TEXT_CLASS);
                activeText.addEventListener('transitionend', onTextTransitionEnd);

                requestAnimationFrame(() => {
                    activeText.classList.remove(backwardsClass);
                });
            }
            next() {
                if (this.inTransit) return;

                let nextId = +this.activeImg[0].dataset.id + 1;

                if (nextId > this.length)
                    nextId = 1;

                this.startTransition(nextId);
            }
            prev() {
                if (this.inTransit) return;

                let nextId = +this.activeImg[0].dataset.id - 1;

                if (nextId < 1)
                    nextId = this.length;

                this.startTransition(nextId);
            }
            switchBackgroundImage(nextId) {
                function onBackgroundTransitionEnd(e) {
                    if (e.target === this) {
                        this.style.setProperty('--img-prev', imageUrl);
                        this.classList.remove(bgClass);
                        this.removeEventListener('transitionend', onBackgroundTransitionEnd);
                    }
                }

                const bgClass = 'slider--bg-next';
                const el = this.el;
                const imageUrl = `url(${this.images[+nextId - 1].src})`;

                el.style.setProperty('--img-next', imageUrl);
                el.addEventListener('transitionend', onBackgroundTransitionEnd);
                el.classList.add(bgClass);
            }
        }

        const sliderEl = document.getElementById('slider');
        const slider = new Slider(sliderEl);

        // ------------------ Demo stuff ------------------------ //

        let timer = 0;

        function autoSlide() {
            requestAnimationFrame(() => {
                slider.next();
            });

            timer = setTimeout(autoSlide, 5000);
        }

        function stopAutoSlide() {
            clearTimeout(timer);

            this.removeEventListener('touchstart', stopAutoSlide);
            this.removeEventListener('mousemove', stopAutoSlide);
        }

        sliderEl.addEventListener('mousemove', stopAutoSlide);
        sliderEl.addEventListener('touchstart', stopAutoSlide);

        timer = setTimeout(autoSlide, 2000);
    </script>
</body>

</html>